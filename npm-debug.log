0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.14.7
3 info using node@v4.2.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/seancannon/Projects/alien-node-mysql-utils',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/seancannon/.npm/alien-node-mysql-utils/0.0.6/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/seancannon/.npm/alien-node-mysql-utils/0.0.6/package.tgz',
9 verbose tar pack   '/Users/seancannon/Projects/alien-node-mysql-utils' ]
10 verbose tarball /Users/seancannon/.npm/alien-node-mysql-utils/0.0.6/package.tgz
11 verbose folder /Users/seancannon/Projects/alien-node-mysql-utils
12 info prepublish alien-node-mysql-utils@0.0.6
13 verbose addLocalTarball adding from inside cache /Users/seancannon/.npm/alien-node-mysql-utils/0.0.6/package.tgz
14 silly cache afterAdd alien-node-mysql-utils@0.0.6
15 verbose afterAdd /Users/seancannon/.npm/alien-node-mysql-utils/0.0.6/package/package.json not in flight; writing
16 verbose afterAdd /Users/seancannon/.npm/alien-node-mysql-utils/0.0.6/package/package.json written
17 silly publish { name: 'alien-node-mysql-utils',
17 silly publish   version: '0.0.6',
17 silly publish   description: 'Helper functions for MySQL on NodeJS',
17 silly publish   main: 'lib/DB.js',
17 silly publish   dependencies:
17 silly publish    { ramda: '^0.18.x',
17 silly publish      mysql: '^2.7.x',
17 silly publish      q: '^2.0.x',
17 silly publish      moment: '^2.10.x',
17 silly publish      'promise-matchers': '0.9.x' },
17 silly publish   devDependencies: { coveralls: '^2.11.2', istanbul: '^0.3.13', jasmine: '^2.3.1' },
17 silly publish   scripts: { test: 'istanbul cover ./node_modules/.bin/jasmine' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/aliencreations/alien-node-mysql-utils.git' },
17 silly publish   keywords: [ 'aliencreations', 'api', 'util', 'node', 'ramda' ],
17 silly publish   author: { name: 'Sean Cannon' },
17 silly publish   license: 'MIT',
17 silly publish   bugs: { url: 'https://github.com/aliencreations/alien-node-mysql-utils/issues' },
17 silly publish   homepage: 'https://github.com/aliencreations/alien-node-mysql-utils',
17 silly publish   readme: '# alien-node-mysql-utils\nHelper functions for MySql on NodeJS. The functions are pure and curried with Ramda.\n\n[![Build Status](https://travis-ci.org/AlienCreations/alien-node-mysql-utils.svg?branch=master)](https://travis-ci.org/AlienCreations/alien-node-mysql-utils) [![Coverage Status](https://coveralls.io/repos/AlienCreations/alien-node-mysql-utils/badge.svg?branch=master&service=github)](https://coveralls.io/github/AlienCreations/alien-node-mysql-utils?branch=master) [![npm version](http://img.shields.io/npm/v/alien-node-mysql-utils.svg)](https://npmjs.org/package/alien-node-mysql-utils) [![Dependency Status](https://david-dm.org/AlienCreations/alien-node-mysql-utils.svg)](https://david-dm.org/AlienCreations/alien-node-mysql-utils)\n\n## Install\n\n```\n$ npm install alien-node-mysql-utils --save\n```\n\nRun the specs\n\n```\n$ npm test\n```\n\n## Methods\n\n#### query()\nMake a SQL query in which you expect zero or more results. Returns a promise which\neither resolves to an array containing found records (as objects) or rejects if no records found. \n\n##### Suggested model usage: \n```js\n\n\'use strict\';\n\nvar mysql  = require(\'mysql\'),\n    config = require(\'config\'),\n    dbPool = mysql.createPool(config.mysql)\n    \nvar DB                  = require(\'alien-node-mysql-utils\')(dbPool),\n    validateAccountData = require(\'../some-validator\');\n\nvar createAndExecuteQuery = function(status) {\n  var query = \'SELECT * FROM accounts WHERE status = ?\',\n      queryStatement = [query, [status]];\n\n  return DB.query(queryStatement);\n};\n\n/**\n * Query accounts based on status\n * @param {Number} status\n * @returns {Promise}\n */\nfunction getAccountsByStatus(status) {\n  validateAccountData({status : status});\n  return createAndExecuteQuery(status);\n}\n\nmodule.exports = getAccountsByStatus;\n```\n\n##### Suggested controller usage\n```js\n\nvar getAccountsByStatus = require(\'../models/getAccountsByStatus\');\n\ngetAccountsByStatus(\'active\').then(function(accounts) {\n    // handle array of accounts here\n  })\n  .catch(function(err) {\n    // handle "No records found" or other errors here\n  });\n  \n```\n\n#### lookup()\nMake a SQL query in which you expect zero or one result. Returns a promise which\neither resolves to an object matching the row schema or rejects if no records found. \n\n```js\n\n\'use strict\';\n\nvar mysql  = require(\'mysql\'),\n    config = require(\'config\'),\n    dbPool = mysql.createPool(config.mysql)\n    \nvar DB                  = require(\'alien-node-mysql-utils\')(dbPool),\n    validateAccountData = require(\'../some-validator\');\n\nvar createAndExecuteQuery = function(id) {\n  var query = \'SELECT * FROM accounts WHERE id = ?\',\n      queryStatement = [query, [id]];\n\n  return DB.lookup(queryStatement);\n};\n\n/**\n * Lookup account by id\n * @param {Number} id\n * @returns {Promise}\n */\nfunction getAccountById(id) {\n  validateAccountData({id : id});\n  return createAndExecuteQuery(id);\n}\n\nmodule.exports = getAccountById;\n```\n\n##### Suggested controller usage\n```js\n\nvar getAccountById = require(\'../models/getAccountById\');\n\n\ngetAccountById(1234).then(function(account) {\n    // handle account object here\n  })\n  .catch(function(err) {\n    // handle "No records found" or other errors here\n  });\n  \n```\n\n## TODO \n - Make the transform to/from column methods unbiased with decorator injection\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '098c061674646cc9ab1783eb00779d9db2344ff3',
17 silly publish   _id: 'alien-node-mysql-utils@0.0.6',
17 silly publish   _shasum: '1bfa1142dffcc6e5ae0f32b410d9937f38289aed',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name alien-node-mysql-utils
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/alien-node-mysql-utils
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/seancannon/.npm/alien-node-mysql-utils/0.0.6/package.tgz
25 verbose request uri https://registry.npmjs.org/alien-node-mysql-utils
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 2:37:24 PM
28 verbose request id bd0a0364bb42c32b
29 http request PUT https://registry.npmjs.org/alien-node-mysql-utils
30 http 403 https://registry.npmjs.org/alien-node-mysql-utils
31 verbose headers { 'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '95',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   date: 'Fri, 13 Nov 2015 22:37:25 GMT',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   connection: 'keep-alive',
31 verbose headers   'x-served-by': 'cache-sjc3123-SJC',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1447454245.329316,VS0,VE224' }
32 verbose request invalidating /Users/seancannon/.npm/registry.npmjs.org/alien-node-mysql-utils on PUT
33 error publish Failed PUT 403
34 verbose stack Error: "You cannot publish over the previously published version 0.0.6." : alien-node-mysql-utils
34 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
34 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
34 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
34 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
34 verbose stack     at emitTwo (events.js:87:13)
34 verbose stack     at Request.emit (events.js:172:7)
34 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1063:14)
34 verbose stack     at emitOne (events.js:82:20)
34 verbose stack     at Request.emit (events.js:169:7)
34 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
35 verbose statusCode 403
36 verbose pkgid alien-node-mysql-utils
37 verbose cwd /Users/seancannon/Projects/alien-node-mysql-utils
38 error Darwin 15.0.0
39 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
40 error node v4.2.2
41 error npm  v2.14.7
42 error code E403
43 error "You cannot publish over the previously published version 0.0.6." : alien-node-mysql-utils
44 error If you need help, you may report this error at:
44 error     <https://github.com/npm/npm/issues>
45 verbose exit [ 1, true ]
